#!/usr/bin/env python

"""
Readme: how to use this script, following are steps
1.please put this script to your user munin plugins path
2.change the path of install function according to your realpath and then execute install command 
3.please chmod 755 to this script
4.please execute install command
5.please execute "sudo -u munin munin-cron"
6.please execute "sudo /etc/init.d/munin-node restart" 
"""

import os, os.path, sys, socket, json, glob
from pprint import pformat

UWSGI_STATS_DIR = '/var/run/uwsgi/'

UWSGI_STATS_SOCKET_LIST = glob.glob(UWSGI_STATS_DIR + "*.stats")

if len(UWSGI_STATS_SOCKET_LIST) == 0:
    raise Exception('There is not any uWSGI stats config sockets')

MODES = {
    'listen_queue': 'listen queue',
    'listen_queue_errors': 'listen queue errors',
    'requests': 'requests per ${graph_period}', 
    'exceptions': 'exceptions',
    'vsz': 'physical memory',
    'tx': 'send bytes',
    'avg_rt': 'average response time (ms)',
}

def print_configs():
    _, _, app = os.path.basename(__file__).partition('_')
    for mode in MODES:
        out = ('multigraph %(app)s|%(graph_id)s\n'
               'graph_title %(desc)s\n'
               'graph_vlabel %(desc)s\n'
               'graph_category %(app)s\n')
        if mode in ['tx', 'vsz']:
            out += 'graph_args --base 1024\n'
        if mode in ['requests', 'exceptions', 'tx']:
            out += '%(name)s.type DERIVE\n'
            out += '%(name)s.min 0\n'
        out += "%(name)s.label %(name)s\n"
        out = out % {'graph_id':mode, 'name':mode, 'desc':MODES[mode], 'app':app}
        print out

def print_values():
    _, _, app = os.path.basename(__file__).partition('_')
    uwsgi_stat_fd = UWSGI_STATS_DIR + app + ".stats"
    js = ''
    sfamily, addr = (socket.AF_UNIX, uwsgi_stat_fd)
    try:
        s = socket.socket(sfamily, socket.SOCK_STREAM)
        s.settimeout(3)
        s.connect(addr)
        while True:
            data =  s.recv(4096)
            if len(data) < 1:
                break
            js += data
    except:
        import traceback
        traceback.print_exc()
        raise Exception("unable to get uWSGI stats %s" % uwsgi_stat_fd )
    finally:
        s.close()

    dd = json.loads( js or '{}')
    workers = dd.get('workers', [])
    for mode in MODES:
        if mode in ['listen_queue', 'listen_queue_errors']:
            value = dd.get(mode, 0)
        elif mode in ['avg_rt']:
            value = sum([x.get(mode, 0)/1000 for x in workers]) 
        else:
            value = sum([x.get(mode, 0) for x in workers])
        out = ('multigraph %(app)s|%(graph_id)s\n'
               '%(name)s.value %(value)s\n') %{'graph_id':mode, 'name':mode, 'value':value, 'app':app}
        print out

def install():
    for stat in UWSGI_STATS_SOCKET_LIST:
        appname, _ = os.path.basename(stat).split('.')
        mefile = os.path.realpath(__file__)
        os.system('ln -s %s /etc/munin/plugins/uwsgi_%s' % (mefile, appname))

def uninstall():
    for stat in UWSGI_STATS_SOCKET_LIST:
        appname, _ = os.path.basename(stat).split('.')
        os.system('rm -rf /etc/munin/plugins/uwsgi_%s' % (appname))

def main():
    opt = ""
    if len(sys.argv) > 1:
        opt = sys.argv[1]
    funcs = {
        "install": install,
        "uninstall": uninstall,
        "config": print_configs,
    }
    func = funcs.get(opt, print_values)
    func()

if __name__ == "__main__":
    main()